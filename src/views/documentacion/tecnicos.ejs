<h2>Endpoint de Técnicos</h2>

<!-- GET: Obtener todos los técnicos -->
<details>
  <summary>GET&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /api/v1/tecnicos</summary>
  <ul>
    <li><strong>Descripción:</strong> Obtiene una lista de todos los técnicos registrados.</li>
    <br>
    <li><strong>Instrucciones:</strong> No se requieren parámetros adicionales. Devuelve un listado completo de técnicos.</li>
    <br>
    <li><strong>Ejemplo de solicitud:</strong></li>
    <pre>
    GET: /api/v1/tecnicos
    </pre>
    <li><strong>Ejemplo de respuesta:</strong></li>
    <pre>
[
    {
        "id": 1,
        "nombre": "Juan Pérez",
        "numero_identidad": "12345678",
        "estado_id": 1
    },
    {
        "id": 2,
        "nombre": "Ana Gómez",
        "numero_identidad": "87654321",
        "estado_id": 1
    }
]
    </pre>
    <li><strong>Errores posibles:</strong></li>
    <ul>
      <li><strong><code>500 Internal Server Error:</code></strong> En caso de error en la base de datos o en el servidor.
        <pre><code>
{
    "error": "Error al obtener los técnicos"
}
        </code></pre>
      </li>
    </ul>
  </ul>
</details>

<!-- GET: Obtener técnico por ID -->
<details>
  <summary>GET&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /api/v1/tecnicos/:id</summary>
  <ul>
    <li><strong>Descripción:</strong> Obtiene un técnico específico por su ID.</li>
    <br>
    <li><strong>Instrucciones:</strong> Proporcionar el ID del técnico en la URL.</li>
    <br>
    <li><strong>Ejemplo de solicitud:</strong></li>
    <pre>
    GET: /api/v1/tecnicos/1
    </pre>
    <li><strong>Ejemplo de respuesta:</strong></li>
    <pre>
{
    "id": 1,
    "nombre": "Juan Pérez",
    "numero_identidad": "12345678",
    "estado_id": 1
}
    </pre>
    <li><strong>Errores posibles:</strong></li>
    <ul>
      <li><strong><code>404 Not Found:</code></strong> Si el técnico no existe.
        <pre><code>
{
    "error": "Técnico no encontrado"
}
        </code></pre>
      </li>
      <li><strong><code>500 Internal Server Error:</code></strong> En caso de error en la base de datos o en el servidor.
        <pre><code>
{
    "error": "Error al obtener el técnico"
}
        </code></pre>
      </li>
    </ul>
  </ul>
</details>

<!-- POST: Crear un nuevo técnico -->
<details>
  <summary>POST&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /api/v1/tecnicos</summary>
  <ul>
    <li><strong>Descripción:</strong> Crea un nuevo técnico.</li>
    <br>
    <li><strong>Instrucciones:</strong> Se debe enviar un JSON en el cuerpo de la solicitud con los datos del técnico.</li>
    <br>
    <li><strong>Ejemplo de solicitud:</strong></li>
    <pre>
    POST: /api/v1/tecnicos
    Body: {
        "nombre": "Carlos Sánchez",
        "numero_identidad": "11223344",
        "estado_id": 1
    }
    </pre>
    <li><strong>Ejemplo de respuesta:</strong></li>
    <pre>
{
    "message": "Técnico creado exitosamente"
}
    </pre>
    <li><strong>Errores posibles:</strong></li>
    <ul>
      <li><strong><code>400 Bad Request:</code></strong> Si algún campo está vacío o el estado_id no existe.
        <pre><code>
{
    "error": "Todos los campos son obligatorios"
}
        </code></pre>
      </li>
      <li><strong><code>500 Internal Server Error:</code></strong> En caso de error en la base de datos o en el servidor.
        <pre><code>
{
    "error": "Error al crear el técnico"
}
        </code></pre>
      </li>
    </ul>
  </ul>
</details>

<!-- PUT: Actualizar un técnico existente -->
<details>
  <summary>PUT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /api/v1/tecnicos/:id</summary>
  <ul>
    <li><strong>Descripción:</strong> Actualiza un técnico existente.</li>
    <br>
    <li><strong>Instrucciones:</strong> Se debe proporcionar el ID del técnico como parámetro en la URL y enviar los datos actualizados en el cuerpo de la solicitud.</li>
    <br>
    <li><strong>Ejemplo de solicitud:</strong></li>
    <pre>
    PUT: /api/v1/tecnicos/1
    Body: {
        "nombre": "Juan Pérez Actualizado",
        "numero_identidad": "12345678",
        "estado_id": 1
    }
    </pre>
    <li><strong>Ejemplo de respuesta:</strong></li>
    <pre>
{
    "message": "Técnico actualizado exitosamente"
}
    </pre>
    <li><strong>Errores posibles:</strong></li>
    <ul>
      <li><strong><code>400 Bad Request:</code></strong> Si algún campo está vacío.
        <pre><code>
{
    "error": "Todos los campos son obligatorios"
}
        </code></pre>
      </li>
      <li><strong><code>404 Not Found:</code></strong> Si el técnico no existe.
        <pre><code>
{
    "error": "Técnico no encontrado"
}
        </code></pre>
      </li>
      <li><strong><code>500 Internal Server Error:</code></strong> En caso de error en la base de datos o en el servidor.
        <pre><code>
{
    "error": "Error al actualizar el técnico"
}
        </code></pre>
      </li>
    </ul>
  </ul>
</details>

<!-- PATCH: Eliminar (cambiar estado a Inactivo) un técnico -->
<details>
  <summary>PATCH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /api/v1/tecnicos/:id/estado</summary>
  <ul>
    <li><strong>Descripción:</strong> Cambia el estado de un técnico a inactivo.</li>
    <br>
    <li><strong>Instrucciones:</strong> Se debe proporcionar el ID del técnico como parámetro en la URL.</li>
    <br>
    <li><strong>Ejemplo de solicitud:</strong></li>
    <pre>
    PATCH: /api/v1/tecnicos/1/estado
    </pre>
    <li><strong>Ejemplo de respuesta:</strong></li>
    <pre>
{
    "message": "Técnico marcado como Inactivo exitosamente"
}
    </pre>
    <li><strong>Errores posibles:</strong></li>
    <ul>
      <li><strong><code>404 Not Found:</code></strong> Si el técnico no existe.
        <pre><code>
{
    "error": "Técnico no encontrado"
}
        </code></pre>
      </li>
      <li><strong><code>500 Internal Server Error:</code></strong> En caso de error en la base de datos o en el servidor.
        <pre><code>
{
    "error": "Error al eliminar (inactivar) el técnico"
}
        </code></pre>
      </li>
    </ul>
  </ul>
</details>
